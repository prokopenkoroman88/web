<?php

namespace App\Http\Middleware;

use Closure;
use App;//+
use Request;//+

class LocaleMiddleware
{

    public static $mainLanguage = 'en'; //–æ—Å–Ω–æ–≤–Ω–æ–π —è–∑—ã–∫, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ –¥–æ–ª–∂–µ–Ω –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ URl
    
    //public static $languages = ['en', 'ru', 'uk']; // –£–∫–∞–∑—ã–≤–∞–µ–º, –∫–∞–∫–∏–µ —è–∑—ã–∫–∏ –±—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏. 
    public static $languages = [
    'en'=>["&#127468&#127463 üè¥Û†ÅßÛ†Å¢Û†Å•Û†ÅÆÛ†ÅßÛ†Åø",'English'], 
    'ru'=>["&#127479&#127482",'–†—É—Å—Å–∫–∏–π'], 
    'uk'=>["&#127482&#127462",'–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞'],
    ]; // –£–∫–∞–∑—ã–≤–∞–µ–º, –∫–∞–∫–∏–µ —è–∑—ã–∫–∏ –±—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤   –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏. 


        
    /*
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –º–µ—Ç–∫–∏ —è–∑—ã–∫–∞ –≤ —Ç–µ–∫—É—â–µ–º URL
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–µ—Ç–∫—É –∏–ª–∏ –∑–Ω–∞—á–µ–∏–µ null, –µ—Å–ª–∏ –Ω–µ—Ç –º–µ—Ç–∫–∏
     */
    public static function getLocale($showMain=false)
    {
        $uri = Request::path(); //–ø–æ–ª—É—á–∞–µ–º URI 


        $segmentsURI = explode('/',$uri); //–¥–µ–ª–∏–º –Ω–∞ —á–∞—Å—Ç–∏ –ø–æ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—é "/"

        $sLang = $segmentsURI[0+1] ?? null; // 'en'

        //–ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Ç–∫—É —è–∑—ã–∫–∞  - –µ—Å—Ç—å –ª–∏ –æ–Ω–∞ —Å—Ä–µ–¥–∏ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —è–∑—ã–∫–æ–≤
        //if (!empty($sLang) && in_array($sLang, self::$languages)) {
        if (!empty($sLang) && isset( self::$languages[$sLang] )) {

            if ($showMain || $sLang != self::$mainLanguage) return $sLang; 

        }
        return null; 
    }


    /**
     * Handle an incoming request.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \Closure  $next
     * @return mixed
     */
    public function handle($request, Closure $next)
    {
        $locale = self::getLocale(true);
        App::setLocale($locale);

        //–ø—Ä–æ–ø—É—Å–∫–∞–µ–º –¥–∞–ª—å—à–µ - –ø–µ—Ä–µ–¥–∞–µ–º –≤ —Å–ª–µ–¥—É—é—â–∏–π –ø–æ—Å—Ä–µ–¥–Ω–∏–∫
        return $next($request);
    }
}
